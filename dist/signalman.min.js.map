{"version":3,"sources":["webpack:///signalman.min.js","webpack:///webpack/bootstrap 726d63990f8427481ac9","webpack:///./index.js","webpack:///./~/microevent/microevent.js","webpack:///./~/murl/index.js","webpack:///./~/paqs/index.js","webpack:///./~/purl/index.js","webpack:///(webpack)/buildin/module.js","webpack:///./utils.js"],"names":["signalman","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","isPath","str","search","Router","this","_routes","microevent","purl","murl","paqs","u","httpSafeMethods","isBrowser","window","document","createElement","mixin","reduce","proto","method","methodName","toLowerCase","name","path","handlers","_findRouteByName","Error","arrgs","arguments","slice","push","matcher","prototype","_findRouteByPath","find","r","toUpperCase","_createContext","route","next","state","nextHandler","err","handler","handlerQ","shift","router","trigger","cause","cxt","merge","canUseDOM","_stubRoute","error","_serverDispatcher","req","res","parsedUrl","url","pathname","params","query","bind","fullPath","request","response","_clientDispatcher","pathOrName","newState","currPath","location","byPath","noop","pick","history","replaceState","pushState","_onPopState","e","_linkJacker","tgt","href","docUrl","defaultPrevented","metaKey","ctrlKey","shiftKey","button","target","nodeName","parentNode","attributes","download","value","protocol","host","hash","preventDefault","navigateTo","start","opts","autoStart","handleLinks","_isStarted","undefined","_popStateHandler","addEventListener","_linkHandler","_started","stop","removeEventListener","MicroEvent","event","fct","_events","unbind","splice","indexOf","i","length","apply","Array","destObject","props","rewrite","pattern","visit","captures","replace","_","slash","dot","capture","optional","closed","test","replacer","Function","names","end","strict","src","match","vars","fn","glob","variables","Object","keys","rex","spRex","qs","k","v","dec","decodeURIComponent","isarr","isArray","lastIndex","exec","pathRex","urlToParse","origin","userinfo","username","password","hostname","port","webpackPolyfill","deprecate","paths","children","items","predicate","args","dest","forEach","d","propNames"],"mappings":"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","file":"signalman.min.js","sourcesContent":["var signalman =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * signalman\n\t * Copyright (c) 2015 intuitivcloud Systems <engineering@intuitivcloud.com>\n\t * BSD-3-Clause Licensed\n\t */\n\t\n\t'use strict';\n\t\n\t// module dependencies\n\tvar microevent = __webpack_require__(1),\n\t    purl = __webpack_require__(4),\n\t    murl = __webpack_require__(2),\n\t    paqs = __webpack_require__(3),\n\t    u = __webpack_require__(6);\n\t\n\tvar httpSafeMethods = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE'],\n\t    isBrowser = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\t\n\tfunction isPath(str) {\n\t  return str.search('/') >= 0;\n\t}\n\t\n\t/**\n\t * A router that routes requests\n\t *\n\t * @public\n\t *\n\t * @class\n\t * @constructor\n\t */\n\tfunction Router () {\n\t  this._routes = [];\n\t}\n\t\n\t// add event support\n\tmicroevent.mixin(Router);\n\t\n\t/**\n\t * Represents the details of a navigation performed by the router.\n\t *\n\t * A Context object is passed to all handlers in a route using which the\n\t * handlers can retrieve details about the navigation from this object\n\t *\n\t * @typedef {Object} Context\n\t *\n\t * @property {string}   cause     - the cause of the navigation.\n\t * @property {string}   fullPath  - the full-path of the navigation.\n\t * @property {string}   path      - the path part of the navigation.\n\t * @property {Boolean}  canUseDOM - <code>true</code> if DOM is accessible;\n\t *                                  <code>false</code> if not. Use this to\n\t *                                  detect if navigation occurred on the\n\t *                                  server-side or in the browser.\n\t * @property {Object}   request   - the server-side request object. Available only on\n\t *                                  the server.\n\t * @property {Object}   response  - the server-side response object. Available only on\n\t *                                  the server.\n\t * @property {Router}   router    - the current router instance\n\t * @property {Object}   params    - the URL parameters extracted. Available only on the\n\t *                                  the client-side. On the server, URL parameters are\n\t *                                  available via the <code>request</code> object.\n\t * @property {Object}   query     - the query string parameters extracted. Available only\n\t *                                  on the client-side. On the server, URL parameters are\n\t *                                  available via the <code>response</code> object.\n\t */\n\t\n\t/**\n\t * A handler function that is invoked with a navigation context\n\t *\n\t * <p>Handlers can also be specified as middleware chain for a route. If defined as a\n\t * middleware, implementations can invoke the <code>next()</code> method on the\n\t * navigation context object passed to indicate that the router can proceed to\n\t * the next middleware or handler in the chain.</p>\n\t *\n\t * @callback Handler\n\t *\n\t * @param {Context} context - the navigation context object\n\t */\n\t\n\t/**\n\t * Represents a route definition in signalman.\n\t *\n\t * @typedef {Object} Route\n\t *\n\t * @private\n\t *\n\t * @property {string}     method   - the HTTP method of this route\n\t * @property {string}     path     - the path pattern used by this route to match requests\n\t * @property {Handler[]}  handlers - the handlers or middlewares for this route\n\t * @property {Object}     matcher  - the matcher object that performs matching of request\n\t *                                   with this route's path pattern\n\t */\n\t\n\t// add HTTP methods as methods to the router prototype\n\thttpSafeMethods.reduce(function (proto, method) {\n\t  var methodName = (method === 'DELETE' ? 'DEL' : method).toLowerCase();\n\t\n\t  /**\n\t   * Registers the specified chain of handlers for the specified path and method\n\t   *\n\t   * @public\n\t   *\n\t   * @param  {string}     name     - the the name of the route\n\t   * @param  {string}     path     - the path to handle\n\t   * @param  {function[]} handlers - one or more handlers\n\t   */\n\t  proto[methodName] = function (name, path) {\n\t    var handlers, m;\n\t\n\t    // noop if on client and method is not GET\n\t    if (isBrowser && method !== 'GET') return;\n\t\n\t    if (this._findRouteByName(name))\n\t      throw new Error('Route with the name \\'' + name + '\\' is already added');\n\t\n\t    handlers = u.arrgs(arguments).slice(2);\n\t    m = murl(path);\n\t\n\t    if (!(m in this._routes)) this._routes[m] = {};\n\t\n\t    this._routes.push({\n\t      name: name,\n\t      method: method,\n\t      path: path,\n\t      handlers: handlers,\n\t      matcher: m\n\t    });\n\t  };\n\t\n\t  return proto;\n\t}, Router.prototype);\n\t\n\t/**\n\t * Finds and returns the first route whose matcher matches the specified\n\t *\n\t * @private\n\t *\n\t * @param  {string} path   - the path to match the route against\n\t * @param  {string} [method=GET] - the HTTP method to match route against\n\t *\n\t * @return {Route|undefined} the route object or undefined\n\t */\n\tRouter.prototype._findRouteByPath = function findRoute(path, method) {\n\t  method = method || 'GET';\n\t  return u.find(this._routes, function (r) {\n\t    return r.matcher(path) && r.method === method.toUpperCase();\n\t  });\n\t};\n\t/**\n\t * Finds and returns the first route whose name & method match the specified\n\t * name and method\n\t *\n\t * @private\n\t *\n\t * @param  {string} name   - the name of the route\n\t * @param  {string} [method=GET] - the HTTP method to match route against\n\t *\n\t * @return {Route|undefined} the route object or undefined\n\t */\n\tRouter.prototype._findRouteByName = function findRoute(name, method) {\n\t  method = method || 'GET';\n\t\n\t  return u.find(this._routes, function (r) {\n\t    return r.name === name && r.method === method.toUpperCase();\n\t  });\n\t};\n\t\n\t/**\n\t * Builds and returns a new context object for the specified path, route and state\n\t *\n\t * @private\n\t *\n\t * @param {string}    path - the path for which this context is to be created\n\t * @param {Route}     route - the route object that will be associated with the context\n\t * @param {Function}  next - the next handler\n\t * @param {Object}    [state] - an optional state with additional attributes to add to context\n\t *\n\t * @return {Context} a new instance of the navigation context object\n\t */\n\tRouter.prototype._createContext = function _createContext(path, route, next, state) {\n\t  var handlerQ = route.handlers.slice(),\n\t      cxt = u.merge({\n\t        path: path,\n\t        router: this,\n\t        canUseDOM: isBrowser\n\t      }, state);\n\t\n\t  /**\n\t   * The next middleware iterator internal to signalman\n\t   *\n\t   * @public\n\t   *\n\t   * @return {Handler|null} the next middleware function registered for the route\n\t   */\n\t  function nextHandler(err) {\n\t    var handler;\n\t\n\t    // stop if a handler throws an error\n\t    if (err)\n\t      return next(err);\n\t\n\t    handler = handlerQ.shift();\n\t\n\t    if (!handler) {\n\t      this.router.trigger('navigationComplete', {\n\t        path: path,\n\t        method: route.method,\n\t        cause: state.cause,\n\t        router: this.router\n\t      });\n\t      return next();\n\t    }\n\t\n\t    try {\n\t      return handler(cxt);\n\t    } catch (err) {\n\t      return next(err);\n\t    }\n\t  }\n\t\n\t  cxt.next = nextHandler;\n\t\n\t  return cxt;\n\t};\n\t\n\t/**\n\t * A terminating route for client-side routing\n\t *\n\t * @param  {string}   path  - the path of the route\n\t * @param  {Function} next  - the underlying next call\n\t * @param  {Object}   [err] - an optional error object\n\t */\n\tRouter.prototype._stubRoute = function (path, method, next, err) {\n\t  if (err) this.trigger('error', {\n\t    path: path,\n\t    method: method,\n\t    router: this,\n\t    error: err\n\t  });\n\t  next(err);\n\t};\n\t\n\t/**\n\t * The server-side request dispatcher\n\t *\n\t * @private\n\t *\n\t * @param {Object}   req  - the request object sent by the server\n\t * @param {Object}   res  - the response object sent by the server\n\t * @param {Function} next - the next function in the server middleware chain\n\t */\n\tRouter.prototype._serverDispatcher = function (req, res, next) {\n\t  var parsedUrl = (typeof req.url === 'string') ? purl(req.url) : req.url,\n\t      path = parsedUrl.pathname,\n\t      method = req.method.toUpperCase(),\n\t      cause = 'httpRequest',\n\t      route, cxt;\n\t\n\t  // find the route\n\t  route = this._findRouteByPath(path, method);\n\t\n\t  // did not find a matching route\n\t  if (!route) {\n\t    this.trigger('notFound', { path: req.url, method: method, router: this });\n\t    return next();\n\t  }\n\t\n\t  // parse URL and query params, attach to request\n\t  req.params = route.matcher(path);\n\t  req.query = parsedUrl.search ? paqs(parsedUrl.search) : {};\n\t\n\t  // build new context\n\t  cxt = this._createContext(path, route,\n\t    this._stubRoute.bind(this, req.url, method, next), {\n\t    fullPath: req.url,\n\t    cause: cause,\n\t    request: req,\n\t    response: res\n\t  });\n\t\n\t  // trigger a navigating event\n\t  this.trigger('navigating', {\n\t    path: path,\n\t    method: method,\n\t    cause: cause,\n\t    router: this\n\t  });\n\t\n\t  return cxt.next();\n\t};\n\t\n\t\n\t/**\n\t * The client-side dispatcher\n\t *\n\t * @private\n\t *\n\t * @param {string} pathOrName    - the path to dispatch to\n\t * @param {Object} [state] - an optional state to be associated with the navigation\n\t */\n\tRouter.prototype._clientDispatcher = function (pathOrName, state) {\n\t  var currPath = document.location.pathname,\n\t      cause = (state.cause || 'navigation'),\n\t      url = purl(pathOrName),\n\t      byPath = isPath(pathOrName),\n\t      route = byPath ? this._findRouteByPath(url.pathname, 'GET') : this._findRouteByName(pathOrName, 'GET'),\n\t      cxt, newState;\n\t\n\t  if (!route) {\n\t    this.trigger('notFound', { path: pathOrName, method: 'GET', router: this });\n\t    return;\n\t  }\n\t\n\t  // build new context\n\t  cxt = this._createContext(url.pathname, route,\n\t    this._stubRoute.bind(this, pathOrName, 'GET', u.noop), {\n\t    fullPath: pathOrName,\n\t    cause: cause,\n\t    params: (state.params || route.matcher(url.pathname)),\n\t    query: (state.query || paqs(url.search))\n\t  });\n\t\n\t  // cherry-pick only serializable stuff from context\n\t  newState = u.pick(cxt, ['fullPath', 'path', 'params', 'query', 'cause']);\n\t\n\t  if (currPath === url.pathname)\n\t    window.history.replaceState(newState, null, pathOrName);\n\t  else\n\t    window.history.pushState(newState, null, pathOrName);\n\t\n\t  // invoke the first handler/middleware\n\t  cxt.next();\n\t\n\t  // trigger a navigating event\n\t  this.trigger('navigating', {\n\t    path: pathOrName,\n\t    method: 'GET',\n\t    cause: cause,\n\t    router: this\n\t  });\n\t};\n\t\n\t/**\n\t * The client-side popState event handler\n\t *\n\t * @private\n\t *\n\t * @param {Object} e - the popState event object\n\t */\n\tRouter.prototype._onPopState = function (e) {\n\t  var state = e.state;\n\t  this._clientDispatcher(state.fullPath, state);\n\t};\n\t\n\t/**\n\t * Handles clicks on the document, and defines\n\t * navigation behavior for links.\n\t *\n\t * @private\n\t *\n\t * @param {Object} e - the click event\n\t */\n\tRouter.prototype._linkJacker = function (e) {\n\t  var tgt, href, docUrl, fullPath;\n\t\n\t  // ignore cancelled, modified or button events\n\t  if (e.defaultPrevented) return;\n\t  if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n\t  if (e.button !== 0) return;\n\t\n\t  tgt = e.target;\n\t  while (tgt && tgt.nodeName !== 'A')\n\t    tgt = tgt.parentNode;\n\t\n\t  if (!tgt) return;\n\t\n\t  // ignore links which open in a new tab, we will need server-side render for them\n\t  if (tgt.target && tgt.target !== '_self') return;\n\t\n\t  // ignore links that offer downloading content\n\t  if (tgt.attributes.download) return;\n\t\n\t  // ignore links with a hard mode\n\t  if (('data-hard' in tgt.attributes) && tgt.attributes['data-hard'].value === 'true') return;\n\t\n\t  // extract the path of the link and the current document\n\t  href = purl(tgt.href);\n\t  docUrl = purl(window.location.href);\n\t\n\t  // link's protocol and host should match that of the host\n\t  if (href.protocol !== docUrl.protocol || href.host !== docUrl.host) return;\n\t\n\t  // compose the new path\n\t  fullPath = href.pathname + (href.search || '') + (href.hash || '');\n\t\n\t  e.preventDefault();\n\t\n\t  // get our router to route us\n\t  this.navigateTo(fullPath, {cause: 'navigation'});\n\t};\n\t\n\t/**\n\t * The options for routing behavior\n\t *\n\t * @typedef RoutingOptions\n\t *\n\t * @property {Boolean} [autoStart=false]  - <code>true</code> if the router should initialize\n\t *                                          current document's URL and call the routes registered\n\t *                                          for it. This is only available on the client-side.\n\t *\n\t * @property {Boolean} [handleLinks=true] - <code>true</code> if the router should intercept all\n\t *                                          links on the current document and handle it. This is\n\t *                                          only available on the client-side\n\t */\n\t\n\t/**\n\t * Starts routing\n\t *\n\t * @public\n\t *\n\t * @param {RoutingOptions} [opts] - options for routing\n\t */\n\tRouter.prototype.start = function (opts) {\n\t  opts = u.merge({ autoStart: false, handleLinks: true }, (opts || {}));\n\t\n\t  // already running, noop\n\t  if (this._isStarted) return undefined;\n\t\n\t  // if on server, use server dispatcher\n\t  if (!isBrowser) return this._serverDispatcher.bind(this);\n\t\n\t  this._popStateHandler = this._onPopState.bind(this);\n\t\n\t  // attach client dispatcher\n\t  window.addEventListener('popstate', this._popStateHandler);\n\t\n\t  // navigate to current document URL if autoStart specified\n\t  if (opts.autoStart)\n\t    this._clientDispatcher(document.location.href, {cause: 'startup'});\n\t\n\t  // jack links if requested\n\t  if (opts.handleLinks) {\n\t    this._linkHandler = this._linkJacker.bind(this);\n\t    document.addEventListener('click', this._linkHandler);\n\t  }\n\t\n\t  this._started = true;\n\t};\n\t\n\t/**\n\t * Stops routing client-side navigation\n\t *\n\t * @public\n\t */\n\tRouter.prototype.stop = function stopRouting() {\n\t  if (!(isBrowser && this._isStarted)) return;\n\t\n\t  window.removeEventListener('popstate', this._popStateHandler);\n\t  if (this._linkHandler) document.removeEventListener('click', this._linkHandler);\n\t\n\t  this._isStarted = false;\n\t};\n\t\n\t// add the navigateTo method only if we are in a browser\n\tif (isBrowser)\n\t  /**\n\t   * Triggers navigation to the specified path\n\t   *\n\t   * @public\n\t   *\n\t   * @param {String} path the path to navigate to\n\t   */\n\t  Router.prototype.navigateTo = function (path, params) {\n\t    this._clientDispatcher(path, {cause: 'navigation', params: params });\n\t  };\n\t\n\tmodule.exports = function signalman() {\n\t  return new Router();\n\t};\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {/**\n\t * MicroEvent - to make any js object an event emitter (server or browser)\n\t * \n\t * - pure javascript - server compatible, browser compatible\n\t * - dont rely on the browser doms\n\t * - super simple - you get it immediatly, no mistery, no magic involved\n\t *\n\t * - create a MicroEventDebug with goodies to debug\n\t *   - make it safer to use\n\t*/\n\t\n\tvar MicroEvent\t= function(){}\n\tMicroEvent.prototype\t= {\n\t\tbind\t: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tthis._events[event] = this._events[event]\t|| [];\n\t\t\tthis._events[event].push(fct);\n\t\t},\n\t\tunbind\t: function(event, fct){\n\t\t\tthis._events = this._events || {};\n\t\t\tif( event in this._events === false  )\treturn;\n\t\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t\t},\n\t\ttrigger\t: function(event /* , args... */){\n\t\t\tthis._events = this._events || {};\n\t\t\tif( event in this._events === false  )\treturn;\n\t\t\tfor(var i = 0; i < this._events[event].length; i++){\n\t\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1))\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * mixin will delegate all MicroEvent.js function in the destination object\n\t *\n\t * - require('MicroEvent').mixin(Foobar) will make Foobar able to use MicroEvent\n\t *\n\t * @param {Object} the object which will support MicroEvent\n\t*/\n\tMicroEvent.mixin\t= function(destObject){\n\t\tvar props\t= ['bind', 'unbind', 'trigger'];\n\t\tfor(var i = 0; i < props.length; i ++){\n\t\t\tdestObject.prototype[props[i]]\t= MicroEvent.prototype[props[i]];\n\t\t}\n\t}\n\t\n\t// export in common js\n\tif( typeof module !== \"undefined\" && ('exports' in module)){\n\t\tmodule.exports\t= MicroEvent\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(5)(module)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tvar rewrite = function(pattern, visit) {\n\t\tvar captures = [];\n\t\n\t\tpattern = pattern.replace(/\\*([^}]|$)/g, '{*}$1');\n\t\tpattern = pattern.replace(/(\\/)?(\\.)?\\{([^{]+)\\}(?:\\(([^)]+)\\))?(\\?)?(?=(.|$))/g, function(_, slash, dot, name, capture, optional, closed) {\n\t\t\tif (!/^(\\w|\\d|[_\\-.*])+$/g.test(name)) throw new Error('bad pattern name: '+name);\n\t\t\tcaptures.push(visit({\n\t\t\t\tslash:slash ? '\\\\/' : '',\n\t\t\t\tdot:dot ? '\\\\.' : '',\n\t\t\t\tname:name,\n\t\t\t\tcapture:capture,\n\t\t\t\toptional:optional,\n\t\t\t\tclosed:closed === '' || closed === '/'\n\t\t\t}));\n\t\t\treturn '@';\n\t\t});\n\t\n\t\treturn pattern.replace(/([\\\\\\/.\"])/g, '\\\\$1').replace(/@/g, function() {\n\t\t\treturn captures.shift();\n\t\t});\n\t};\n\tvar replacer = function(pattern, opts) {\n\t\tif (!pattern) {\n\t\t\treturn function() {\n\t\t\t\treturn '';\n\t\t\t};\n\t\t}\n\t\n\t\tpattern = 'return \"'+rewrite(pattern, function(params) {\n\t\t\treturn params.slash+params.dot+'\"+params[\"'+params.name+'\"]+\"';\n\t\t})+'\";';\n\t\n\t\treturn new Function('params',pattern.replace(/\\+\"\";$/, ';'));\n\t};\n\tvar matcher = function(pattern, opts) {\n\t\tif (!pattern) {\n\t\t\treturn function() {\n\t\t\t\treturn {};\n\t\t\t};\n\t\t}\n\t\n\t\tvar names = [];\n\t\tpattern = rewrite(pattern, function(params) {\n\t\t\tnames.push(params.name);\n\t\t\tparams.capture  = params.capture  || (params.name === '*' ? '.+?' : '[^\\\\/]+');\n\t\t\tparams.optional = params.optional || (params.name === '*' ? '?' : '');\n\t\t\treturn (params.closed ? '(?:'+params.slash+params.dot : params.slash+'(?:'+params.dot)+'('+params.capture+'))'+params.optional;\n\t\t});\n\t\n\t\tvar end = opts.strict ? '' : '[\\\\/]?';\n\t\tvar src = 'var pattern=/^'+pattern+end+'$/i;\\nvar match=str.match(pattern);\\nreturn match && {';\n\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\tif (names[i] === '*') {\n\t\t\t\tsrc += '\"*\":match['+(i+1)+'] || \"\",\"glob\":match['+(i+1)+'] || \"\"';\n\t\t\t} else {\n\t\t\t\tsrc += '\"'+names[i]+'\":match['+(i+1)+']';\n\t\t\t}\n\t\t\tsrc += (i+1 < names.length ? ',' : '');\n\t\t}\n\t\tsrc += '};';\n\t\n\t\treturn new Function('str', src);\n\t};\n\t\n\tmodule.exports = function(pattern, opts) {\n\t\tif (!opts) opts = {};\n\t\n\t\tvar match = matcher(pattern, opts);\n\t\tvar replace = replacer(pattern, opts);\n\t\tvar vars = {};\n\t\n\t\tvar fn = function(url) {\n\t\t\treturn (typeof url === 'string' ? match : replace)(url);\n\t\t};\n\t\n\t\trewrite(pattern || '', function(params) {\n\t\t\tvars[params.name] = true;\n\t\t});\n\t\n\t\tif (vars['*']) vars.glob = true;\n\t\tfn.variables = Object.keys(vars);\n\t\tfn.pattern = pattern || '';\n\t\n\t\treturn fn;\n\t};\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * paqs\n\t * Copyright (c) 2015 intuitivcloud Systems <engineering@intuitivcloud.com>\n\t * BSD-3-Clause Licensed\n\t */\n\t\n\t'use strict';\n\t\n\tvar rex = /([\\w\\d\\+\\.%$\\-_]+)=?([\\w\\d\\+\\.%$\\-_]+)?&?/g,\n\t    spRex = /\\+/g;\n\t\n\tmodule.exports = function paqs(qs) {\n\t  var params = {},\n\t      dec = decodeURIComponent,\n\t      isarr = Array.isArray,\n\t      m, k, v;\n\t\n\t  rex.lastIndex = 0;\n\t  while ((m = rex.exec(qs)) && m.length === 3) {\n\t    k = dec(m[1].replace(spRex, ' '));\n\t    v = m[2] && dec(m[2].replace(spRex, ' '));\n\t\n\t    if (k in params && isarr(params[k])) params[k].push(v);\n\t    if (k in params && !isarr(params[k])) params[k] = [params[k], v];\n\t    if (!(k in params)) params[k] = v;\n\t  }\n\t\n\t  return params;\n\t};\n\t\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * purl\n\t * Copyright (c) 2015 intuitivcloud Systems <engineering@intuitivcloud.com>\n\t * BSD-3-Clause Licensed\n\t */\n\t\n\t'use strict';\n\t\n\tvar pathRex = /(([\\w\\.\\-\\+]+:)\\/{2}(([\\w\\d\\.]+):([\\w\\d\\.]+))?@?(([a-zA-Z0-9\\.\\-_]+)(?::(\\d{1,5}))?))?(\\/(?:[a-zA-Z0-9\\.\\-\\/\\+\\%\\_]+)?)(?:\\?([a-zA-Z0-9=%\\-_\\.\\*&;]+))?(?:#([a-zA-Z0-9\\-=,&%;\\/\\\\\"'\\?]+)?)?/;\n\t\n\t/**\n\t * Parses the specified URL and returns an object containing the components\n\t * extracted\n\t *\n\t * @param  {string} urlToParse - the URL to parse and extract components from\n\t *\n\t * @return {Object} an object containing the components extracted from the specified\n\t *                  URL\n\t */\n\tmodule.exports = function purl(urlToParse) {\n\t  var m = pathRex.exec(urlToParse),\n\t      i = 1;\n\t\n\t  if (!m) return {};\n\t\n\t  return {\n\t    origin: m[i++],\n\t    protocol: m[i++],\n\t    userinfo: m[i++],\n\t    username: m[i++],\n\t    password: m[i++],\n\t    host: m[i++],\n\t    hostname: m[i++],\n\t    port: m[i++],\n\t    pathname: m[i++],\n\t    search: m[i++],\n\t    hash: m[i++]\n\t  };\n\t};\n\t\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * signalman\n\t * Copyright (c) 2015 intuitivcloud Systems <engineering@intuitivcloud.com>\n\t * BSD-3-Clause Licensed\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Finds the first item in the array for which the specified\n\t * predicate function returns <code>true</code>\n\t *\n\t * @param  {Function} predicate - the predicate to use to test each value\n\t *\n\t * @return {*|undefined} the first item in the array which tests positive\n\t *                        with the predicate\n\t */\n\tfunction find(items, predicate) {\n\t  var i = 0;\n\t\n\t  for (;i < items.length; i += 1)\n\t    if (predicate(items[i], i, items))\n\t      return items[i];\n\t}\n\t\n\t/**\n\t * Returns an array based on the specified arguments object\n\t *\n\t * @param  {Object} args - the arguments object to convert to array\n\t *\n\t * @return {Array} an array containing the items passed in the specified\n\t *                  arguments object\n\t */\n\tfunction arrgs(args) {\n\t  return Array.prototype.slice.call(args);\n\t}\n\t\n\t/**\n\t * Returns the a new object after mergining all the attributes\n\t * from all of the specified source objects.\n\t *\n\t * It does not modify any of the objects. Successive source objects'\n\t * attributes will overwrite attributes with same names from\n\t * previous source objects.\n\t *\n\t * This method can also be used to make shallow copies of objects.\n\t *\n\t * @param {Object|Object...} sources - the source objects to merge\n\t *                                      attributes from\n\t *\n\t * @return {Object} a new object with attributes from all specified\n\t *                  source objects\n\t */\n\tfunction merge() {\n\t  var args = arrgs(arguments),\n\t      dest = {};\n\t\n\t  args.forEach(function (src) {\n\t    dest = Object.keys(src).reduce(function (d, k) {\n\t      d[k] = src[k];\n\t      return d;\n\t    }, dest);\n\t  });\n\t\n\t  return dest;\n\t}\n\t\n\t/**\n\t * A no-op function.\n\t */\n\tfunction noop() {}\n\t\n\t/**\n\t * Returns an object with the attributes from the specified\n\t * source object whose names are present in the specified\n\t * property names\n\t *\n\t * @param {Object} src - the object to extract the attributes from\n\t * @param {string[]} propName - the names of the attributes to extract\n\t *\n\t * @return {Object} an object with the specified attributes from source object\n\t */\n\tfunction pick(src, propNames) {\n\t  return propNames.reduce(function (dest, name) {\n\t    if (!(name in src)) return dest;\n\t    dest[name] = src[name];\n\t    return dest;\n\t  }, {});\n\t}\n\t\n\tmodule.exports = {\n\t  find: find,\n\t  arrgs: arrgs,\n\t  merge: merge,\n\t  noop: noop,\n\t  pick: pick\n\t};\n\t\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** signalman.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 726d63990f8427481ac9\n **/","/*!\n * signalman\n * Copyright (c) 2015 intuitivcloud Systems <engineering@intuitivcloud.com>\n * BSD-3-Clause Licensed\n */\n\n'use strict';\n\n// module dependencies\nvar microevent = require('microevent'),\n    purl = require('purl'),\n    murl = require('murl'),\n    paqs = require('paqs'),\n    u = require('./utils');\n\nvar httpSafeMethods = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'HEAD', 'OPTIONS', 'TRACE'],\n    isBrowser = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nfunction isPath(str) {\n  return str.search('/') >= 0;\n}\n\n/**\n * A router that routes requests\n *\n * @public\n *\n * @class\n * @constructor\n */\nfunction Router () {\n  this._routes = [];\n}\n\n// add event support\nmicroevent.mixin(Router);\n\n/**\n * Represents the details of a navigation performed by the router.\n *\n * A Context object is passed to all handlers in a route using which the\n * handlers can retrieve details about the navigation from this object\n *\n * @typedef {Object} Context\n *\n * @property {string}   cause     - the cause of the navigation.\n * @property {string}   fullPath  - the full-path of the navigation.\n * @property {string}   path      - the path part of the navigation.\n * @property {Boolean}  canUseDOM - <code>true</code> if DOM is accessible;\n *                                  <code>false</code> if not. Use this to\n *                                  detect if navigation occurred on the\n *                                  server-side or in the browser.\n * @property {Object}   request   - the server-side request object. Available only on\n *                                  the server.\n * @property {Object}   response  - the server-side response object. Available only on\n *                                  the server.\n * @property {Router}   router    - the current router instance\n * @property {Object}   params    - the URL parameters extracted. Available only on the\n *                                  the client-side. On the server, URL parameters are\n *                                  available via the <code>request</code> object.\n * @property {Object}   query     - the query string parameters extracted. Available only\n *                                  on the client-side. On the server, URL parameters are\n *                                  available via the <code>response</code> object.\n */\n\n/**\n * A handler function that is invoked with a navigation context\n *\n * <p>Handlers can also be specified as middleware chain for a route. If defined as a\n * middleware, implementations can invoke the <code>next()</code> method on the\n * navigation context object passed to indicate that the router can proceed to\n * the next middleware or handler in the chain.</p>\n *\n * @callback Handler\n *\n * @param {Context} context - the navigation context object\n */\n\n/**\n * Represents a route definition in signalman.\n *\n * @typedef {Object} Route\n *\n * @private\n *\n * @property {string}     method   - the HTTP method of this route\n * @property {string}     path     - the path pattern used by this route to match requests\n * @property {Handler[]}  handlers - the handlers or middlewares for this route\n * @property {Object}     matcher  - the matcher object that performs matching of request\n *                                   with this route's path pattern\n */\n\n// add HTTP methods as methods to the router prototype\nhttpSafeMethods.reduce(function (proto, method) {\n  var methodName = (method === 'DELETE' ? 'DEL' : method).toLowerCase();\n\n  /**\n   * Registers the specified chain of handlers for the specified path and method\n   *\n   * @public\n   *\n   * @param  {string}     name     - the the name of the route\n   * @param  {string}     path     - the path to handle\n   * @param  {function[]} handlers - one or more handlers\n   */\n  proto[methodName] = function (name, path) {\n    var handlers, m;\n\n    // noop if on client and method is not GET\n    if (isBrowser && method !== 'GET') return;\n\n    if (this._findRouteByName(name))\n      throw new Error('Route with the name \\'' + name + '\\' is already added');\n\n    handlers = u.arrgs(arguments).slice(2);\n    m = murl(path);\n\n    if (!(m in this._routes)) this._routes[m] = {};\n\n    this._routes.push({\n      name: name,\n      method: method,\n      path: path,\n      handlers: handlers,\n      matcher: m\n    });\n  };\n\n  return proto;\n}, Router.prototype);\n\n/**\n * Finds and returns the first route whose matcher matches the specified\n *\n * @private\n *\n * @param  {string} path   - the path to match the route against\n * @param  {string} [method=GET] - the HTTP method to match route against\n *\n * @return {Route|undefined} the route object or undefined\n */\nRouter.prototype._findRouteByPath = function findRoute(path, method) {\n  method = method || 'GET';\n  return u.find(this._routes, function (r) {\n    return r.matcher(path) && r.method === method.toUpperCase();\n  });\n};\n/**\n * Finds and returns the first route whose name & method match the specified\n * name and method\n *\n * @private\n *\n * @param  {string} name   - the name of the route\n * @param  {string} [method=GET] - the HTTP method to match route against\n *\n * @return {Route|undefined} the route object or undefined\n */\nRouter.prototype._findRouteByName = function findRoute(name, method) {\n  method = method || 'GET';\n\n  return u.find(this._routes, function (r) {\n    return r.name === name && r.method === method.toUpperCase();\n  });\n};\n\n/**\n * Builds and returns a new context object for the specified path, route and state\n *\n * @private\n *\n * @param {string}    path - the path for which this context is to be created\n * @param {Route}     route - the route object that will be associated with the context\n * @param {Function}  next - the next handler\n * @param {Object}    [state] - an optional state with additional attributes to add to context\n *\n * @return {Context} a new instance of the navigation context object\n */\nRouter.prototype._createContext = function _createContext(path, route, next, state) {\n  var handlerQ = route.handlers.slice(),\n      cxt = u.merge({\n        path: path,\n        router: this,\n        canUseDOM: isBrowser\n      }, state);\n\n  /**\n   * The next middleware iterator internal to signalman\n   *\n   * @public\n   *\n   * @return {Handler|null} the next middleware function registered for the route\n   */\n  function nextHandler(err) {\n    var handler;\n\n    // stop if a handler throws an error\n    if (err)\n      return next(err);\n\n    handler = handlerQ.shift();\n\n    if (!handler) {\n      this.router.trigger('navigationComplete', {\n        path: path,\n        method: route.method,\n        cause: state.cause,\n        router: this.router\n      });\n      return next();\n    }\n\n    try {\n      return handler(cxt);\n    } catch (err) {\n      return next(err);\n    }\n  }\n\n  cxt.next = nextHandler;\n\n  return cxt;\n};\n\n/**\n * A terminating route for client-side routing\n *\n * @param  {string}   path  - the path of the route\n * @param  {Function} next  - the underlying next call\n * @param  {Object}   [err] - an optional error object\n */\nRouter.prototype._stubRoute = function (path, method, next, err) {\n  if (err) this.trigger('error', {\n    path: path,\n    method: method,\n    router: this,\n    error: err\n  });\n  next(err);\n};\n\n/**\n * The server-side request dispatcher\n *\n * @private\n *\n * @param {Object}   req  - the request object sent by the server\n * @param {Object}   res  - the response object sent by the server\n * @param {Function} next - the next function in the server middleware chain\n */\nRouter.prototype._serverDispatcher = function (req, res, next) {\n  var parsedUrl = (typeof req.url === 'string') ? purl(req.url) : req.url,\n      path = parsedUrl.pathname,\n      method = req.method.toUpperCase(),\n      cause = 'httpRequest',\n      route, cxt;\n\n  // find the route\n  route = this._findRouteByPath(path, method);\n\n  // did not find a matching route\n  if (!route) {\n    this.trigger('notFound', { path: req.url, method: method, router: this });\n    return next();\n  }\n\n  // parse URL and query params, attach to request\n  req.params = route.matcher(path);\n  req.query = parsedUrl.search ? paqs(parsedUrl.search) : {};\n\n  // build new context\n  cxt = this._createContext(path, route,\n    this._stubRoute.bind(this, req.url, method, next), {\n    fullPath: req.url,\n    cause: cause,\n    request: req,\n    response: res\n  });\n\n  // trigger a navigating event\n  this.trigger('navigating', {\n    path: path,\n    method: method,\n    cause: cause,\n    router: this\n  });\n\n  return cxt.next();\n};\n\n\n/**\n * The client-side dispatcher\n *\n * @private\n *\n * @param {string} pathOrName    - the path to dispatch to\n * @param {Object} [state] - an optional state to be associated with the navigation\n */\nRouter.prototype._clientDispatcher = function (pathOrName, state) {\n  var currPath = document.location.pathname,\n      cause = (state.cause || 'navigation'),\n      url = purl(pathOrName),\n      byPath = isPath(pathOrName),\n      route = byPath ? this._findRouteByPath(url.pathname, 'GET') : this._findRouteByName(pathOrName, 'GET'),\n      cxt, newState;\n\n  if (!route) {\n    this.trigger('notFound', { path: pathOrName, method: 'GET', router: this });\n    return;\n  }\n\n  // build new context\n  cxt = this._createContext(url.pathname, route,\n    this._stubRoute.bind(this, pathOrName, 'GET', u.noop), {\n    fullPath: pathOrName,\n    cause: cause,\n    params: (state.params || route.matcher(url.pathname)),\n    query: (state.query || paqs(url.search))\n  });\n\n  // cherry-pick only serializable stuff from context\n  newState = u.pick(cxt, ['fullPath', 'path', 'params', 'query', 'cause']);\n\n  if (currPath === url.pathname)\n    window.history.replaceState(newState, null, pathOrName);\n  else\n    window.history.pushState(newState, null, pathOrName);\n\n  // invoke the first handler/middleware\n  cxt.next();\n\n  // trigger a navigating event\n  this.trigger('navigating', {\n    path: pathOrName,\n    method: 'GET',\n    cause: cause,\n    router: this\n  });\n};\n\n/**\n * The client-side popState event handler\n *\n * @private\n *\n * @param {Object} e - the popState event object\n */\nRouter.prototype._onPopState = function (e) {\n  var state = e.state;\n  this._clientDispatcher(state.fullPath, state);\n};\n\n/**\n * Handles clicks on the document, and defines\n * navigation behavior for links.\n *\n * @private\n *\n * @param {Object} e - the click event\n */\nRouter.prototype._linkJacker = function (e) {\n  var tgt, href, docUrl, fullPath;\n\n  // ignore cancelled, modified or button events\n  if (e.defaultPrevented) return;\n  if (e.metaKey || e.ctrlKey || e.shiftKey) return;\n  if (e.button !== 0) return;\n\n  tgt = e.target;\n  while (tgt && tgt.nodeName !== 'A')\n    tgt = tgt.parentNode;\n\n  if (!tgt) return;\n\n  // ignore links which open in a new tab, we will need server-side render for them\n  if (tgt.target && tgt.target !== '_self') return;\n\n  // ignore links that offer downloading content\n  if (tgt.attributes.download) return;\n\n  // ignore links with a hard mode\n  if (('data-hard' in tgt.attributes) && tgt.attributes['data-hard'].value === 'true') return;\n\n  // extract the path of the link and the current document\n  href = purl(tgt.href);\n  docUrl = purl(window.location.href);\n\n  // link's protocol and host should match that of the host\n  if (href.protocol !== docUrl.protocol || href.host !== docUrl.host) return;\n\n  // compose the new path\n  fullPath = href.pathname + (href.search || '') + (href.hash || '');\n\n  e.preventDefault();\n\n  // get our router to route us\n  this.navigateTo(fullPath, {cause: 'navigation'});\n};\n\n/**\n * The options for routing behavior\n *\n * @typedef RoutingOptions\n *\n * @property {Boolean} [autoStart=false]  - <code>true</code> if the router should initialize\n *                                          current document's URL and call the routes registered\n *                                          for it. This is only available on the client-side.\n *\n * @property {Boolean} [handleLinks=true] - <code>true</code> if the router should intercept all\n *                                          links on the current document and handle it. This is\n *                                          only available on the client-side\n */\n\n/**\n * Starts routing\n *\n * @public\n *\n * @param {RoutingOptions} [opts] - options for routing\n */\nRouter.prototype.start = function (opts) {\n  opts = u.merge({ autoStart: false, handleLinks: true }, (opts || {}));\n\n  // already running, noop\n  if (this._isStarted) return undefined;\n\n  // if on server, use server dispatcher\n  if (!isBrowser) return this._serverDispatcher.bind(this);\n\n  this._popStateHandler = this._onPopState.bind(this);\n\n  // attach client dispatcher\n  window.addEventListener('popstate', this._popStateHandler);\n\n  // navigate to current document URL if autoStart specified\n  if (opts.autoStart)\n    this._clientDispatcher(document.location.href, {cause: 'startup'});\n\n  // jack links if requested\n  if (opts.handleLinks) {\n    this._linkHandler = this._linkJacker.bind(this);\n    document.addEventListener('click', this._linkHandler);\n  }\n\n  this._started = true;\n};\n\n/**\n * Stops routing client-side navigation\n *\n * @public\n */\nRouter.prototype.stop = function stopRouting() {\n  if (!(isBrowser && this._isStarted)) return;\n\n  window.removeEventListener('popstate', this._popStateHandler);\n  if (this._linkHandler) document.removeEventListener('click', this._linkHandler);\n\n  this._isStarted = false;\n};\n\n// add the navigateTo method only if we are in a browser\nif (isBrowser)\n  /**\n   * Triggers navigation to the specified path\n   *\n   * @public\n   *\n   * @param {String} path the path to navigate to\n   */\n  Router.prototype.navigateTo = function (path, params) {\n    this._clientDispatcher(path, {cause: 'navigation', params: params });\n  };\n\nmodule.exports = function signalman() {\n  return new Router();\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","/**\n * MicroEvent - to make any js object an event emitter (server or browser)\n * \n * - pure javascript - server compatible, browser compatible\n * - dont rely on the browser doms\n * - super simple - you get it immediatly, no mistery, no magic involved\n *\n * - create a MicroEventDebug with goodies to debug\n *   - make it safer to use\n*/\n\nvar MicroEvent\t= function(){}\nMicroEvent.prototype\t= {\n\tbind\t: function(event, fct){\n\t\tthis._events = this._events || {};\n\t\tthis._events[event] = this._events[event]\t|| [];\n\t\tthis._events[event].push(fct);\n\t},\n\tunbind\t: function(event, fct){\n\t\tthis._events = this._events || {};\n\t\tif( event in this._events === false  )\treturn;\n\t\tthis._events[event].splice(this._events[event].indexOf(fct), 1);\n\t},\n\ttrigger\t: function(event /* , args... */){\n\t\tthis._events = this._events || {};\n\t\tif( event in this._events === false  )\treturn;\n\t\tfor(var i = 0; i < this._events[event].length; i++){\n\t\t\tthis._events[event][i].apply(this, Array.prototype.slice.call(arguments, 1))\n\t\t}\n\t}\n};\n\n/**\n * mixin will delegate all MicroEvent.js function in the destination object\n *\n * - require('MicroEvent').mixin(Foobar) will make Foobar able to use MicroEvent\n *\n * @param {Object} the object which will support MicroEvent\n*/\nMicroEvent.mixin\t= function(destObject){\n\tvar props\t= ['bind', 'unbind', 'trigger'];\n\tfor(var i = 0; i < props.length; i ++){\n\t\tdestObject.prototype[props[i]]\t= MicroEvent.prototype[props[i]];\n\t}\n}\n\n// export in common js\nif( typeof module !== \"undefined\" && ('exports' in module)){\n\tmodule.exports\t= MicroEvent\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/microevent/microevent.js\n ** module id = 1\n ** module chunks = 0\n **/","var rewrite = function(pattern, visit) {\n\tvar captures = [];\n\n\tpattern = pattern.replace(/\\*([^}]|$)/g, '{*}$1');\n\tpattern = pattern.replace(/(\\/)?(\\.)?\\{([^{]+)\\}(?:\\(([^)]+)\\))?(\\?)?(?=(.|$))/g, function(_, slash, dot, name, capture, optional, closed) {\n\t\tif (!/^(\\w|\\d|[_\\-.*])+$/g.test(name)) throw new Error('bad pattern name: '+name);\n\t\tcaptures.push(visit({\n\t\t\tslash:slash ? '\\\\/' : '',\n\t\t\tdot:dot ? '\\\\.' : '',\n\t\t\tname:name,\n\t\t\tcapture:capture,\n\t\t\toptional:optional,\n\t\t\tclosed:closed === '' || closed === '/'\n\t\t}));\n\t\treturn '@';\n\t});\n\n\treturn pattern.replace(/([\\\\\\/.\"])/g, '\\\\$1').replace(/@/g, function() {\n\t\treturn captures.shift();\n\t});\n};\nvar replacer = function(pattern, opts) {\n\tif (!pattern) {\n\t\treturn function() {\n\t\t\treturn '';\n\t\t};\n\t}\n\n\tpattern = 'return \"'+rewrite(pattern, function(params) {\n\t\treturn params.slash+params.dot+'\"+params[\"'+params.name+'\"]+\"';\n\t})+'\";';\n\n\treturn new Function('params',pattern.replace(/\\+\"\";$/, ';'));\n};\nvar matcher = function(pattern, opts) {\n\tif (!pattern) {\n\t\treturn function() {\n\t\t\treturn {};\n\t\t};\n\t}\n\n\tvar names = [];\n\tpattern = rewrite(pattern, function(params) {\n\t\tnames.push(params.name);\n\t\tparams.capture  = params.capture  || (params.name === '*' ? '.+?' : '[^\\\\/]+');\n\t\tparams.optional = params.optional || (params.name === '*' ? '?' : '');\n\t\treturn (params.closed ? '(?:'+params.slash+params.dot : params.slash+'(?:'+params.dot)+'('+params.capture+'))'+params.optional;\n\t});\n\n\tvar end = opts.strict ? '' : '[\\\\/]?';\n\tvar src = 'var pattern=/^'+pattern+end+'$/i;\\nvar match=str.match(pattern);\\nreturn match && {';\n\tfor (var i = 0; i < names.length; i++) {\n\t\tif (names[i] === '*') {\n\t\t\tsrc += '\"*\":match['+(i+1)+'] || \"\",\"glob\":match['+(i+1)+'] || \"\"';\n\t\t} else {\n\t\t\tsrc += '\"'+names[i]+'\":match['+(i+1)+']';\n\t\t}\n\t\tsrc += (i+1 < names.length ? ',' : '');\n\t}\n\tsrc += '};';\n\n\treturn new Function('str', src);\n};\n\nmodule.exports = function(pattern, opts) {\n\tif (!opts) opts = {};\n\n\tvar match = matcher(pattern, opts);\n\tvar replace = replacer(pattern, opts);\n\tvar vars = {};\n\n\tvar fn = function(url) {\n\t\treturn (typeof url === 'string' ? match : replace)(url);\n\t};\n\n\trewrite(pattern || '', function(params) {\n\t\tvars[params.name] = true;\n\t});\n\n\tif (vars['*']) vars.glob = true;\n\tfn.variables = Object.keys(vars);\n\tfn.pattern = pattern || '';\n\n\treturn fn;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/murl/index.js\n ** module id = 2\n ** module chunks = 0\n **/","/*!\n * paqs\n * Copyright (c) 2015 intuitivcloud Systems <engineering@intuitivcloud.com>\n * BSD-3-Clause Licensed\n */\n\n'use strict';\n\nvar rex = /([\\w\\d\\+\\.%$\\-_]+)=?([\\w\\d\\+\\.%$\\-_]+)?&?/g,\n    spRex = /\\+/g;\n\nmodule.exports = function paqs(qs) {\n  var params = {},\n      dec = decodeURIComponent,\n      isarr = Array.isArray,\n      m, k, v;\n\n  rex.lastIndex = 0;\n  while ((m = rex.exec(qs)) && m.length === 3) {\n    k = dec(m[1].replace(spRex, ' '));\n    v = m[2] && dec(m[2].replace(spRex, ' '));\n\n    if (k in params && isarr(params[k])) params[k].push(v);\n    if (k in params && !isarr(params[k])) params[k] = [params[k], v];\n    if (!(k in params)) params[k] = v;\n  }\n\n  return params;\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/paqs/index.js\n ** module id = 3\n ** module chunks = 0\n **/","/*!\n * purl\n * Copyright (c) 2015 intuitivcloud Systems <engineering@intuitivcloud.com>\n * BSD-3-Clause Licensed\n */\n\n'use strict';\n\nvar pathRex = /(([\\w\\.\\-\\+]+:)\\/{2}(([\\w\\d\\.]+):([\\w\\d\\.]+))?@?(([a-zA-Z0-9\\.\\-_]+)(?::(\\d{1,5}))?))?(\\/(?:[a-zA-Z0-9\\.\\-\\/\\+\\%\\_]+)?)(?:\\?([a-zA-Z0-9=%\\-_\\.\\*&;]+))?(?:#([a-zA-Z0-9\\-=,&%;\\/\\\\\"'\\?]+)?)?/;\n\n/**\n * Parses the specified URL and returns an object containing the components\n * extracted\n *\n * @param  {string} urlToParse - the URL to parse and extract components from\n *\n * @return {Object} an object containing the components extracted from the specified\n *                  URL\n */\nmodule.exports = function purl(urlToParse) {\n  var m = pathRex.exec(urlToParse),\n      i = 1;\n\n  if (!m) return {};\n\n  return {\n    origin: m[i++],\n    protocol: m[i++],\n    userinfo: m[i++],\n    username: m[i++],\n    password: m[i++],\n    host: m[i++],\n    hostname: m[i++],\n    port: m[i++],\n    pathname: m[i++],\n    search: m[i++],\n    hash: m[i++]\n  };\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/purl/index.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 5\n ** module chunks = 0\n **/","/*!\n * signalman\n * Copyright (c) 2015 intuitivcloud Systems <engineering@intuitivcloud.com>\n * BSD-3-Clause Licensed\n */\n\n'use strict';\n\n/**\n * Finds the first item in the array for which the specified\n * predicate function returns <code>true</code>\n *\n * @param  {Function} predicate - the predicate to use to test each value\n *\n * @return {*|undefined} the first item in the array which tests positive\n *                        with the predicate\n */\nfunction find(items, predicate) {\n  var i = 0;\n\n  for (;i < items.length; i += 1)\n    if (predicate(items[i], i, items))\n      return items[i];\n}\n\n/**\n * Returns an array based on the specified arguments object\n *\n * @param  {Object} args - the arguments object to convert to array\n *\n * @return {Array} an array containing the items passed in the specified\n *                  arguments object\n */\nfunction arrgs(args) {\n  return Array.prototype.slice.call(args);\n}\n\n/**\n * Returns the a new object after mergining all the attributes\n * from all of the specified source objects.\n *\n * It does not modify any of the objects. Successive source objects'\n * attributes will overwrite attributes with same names from\n * previous source objects.\n *\n * This method can also be used to make shallow copies of objects.\n *\n * @param {Object|Object...} sources - the source objects to merge\n *                                      attributes from\n *\n * @return {Object} a new object with attributes from all specified\n *                  source objects\n */\nfunction merge() {\n  var args = arrgs(arguments),\n      dest = {};\n\n  args.forEach(function (src) {\n    dest = Object.keys(src).reduce(function (d, k) {\n      d[k] = src[k];\n      return d;\n    }, dest);\n  });\n\n  return dest;\n}\n\n/**\n * A no-op function.\n */\nfunction noop() {}\n\n/**\n * Returns an object with the attributes from the specified\n * source object whose names are present in the specified\n * property names\n *\n * @param {Object} src - the object to extract the attributes from\n * @param {string[]} propName - the names of the attributes to extract\n *\n * @return {Object} an object with the specified attributes from source object\n */\nfunction pick(src, propNames) {\n  return propNames.reduce(function (dest, name) {\n    if (!(name in src)) return dest;\n    dest[name] = src[name];\n    return dest;\n  }, {});\n}\n\nmodule.exports = {\n  find: find,\n  arrgs: arrgs,\n  merge: merge,\n  noop: noop,\n  pick: pick\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./utils.js\n ** module id = 6\n ** module chunks = 0\n **/"],"sourceRoot":""}